-- MySQL Script generated by MySQL Workbench (Editado posteriormente)
-- s√°b 24 set 2022 15:58:39
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema ecommerce_dio
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema ecommerce_dio
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `ecommerce_dio` DEFAULT CHARACTER SET utf8 ;
USE `ecommerce_dio` ;

-- -----------------------------------------------------
-- Table `ecommerce_dio`.`cliente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ecommerce_dio`.`cliente` (
  `id` INT NOT NULL,
  `tipo` ENUM("cpf", "cnpj") NOT NULL,
  `identificacao` VARCHAR(45) NOT NULL,
  `endereco` VARCHAR(125) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ecommerce_dio`.`produto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ecommerce_dio`.`produto` (
  `id` INT NOT NULL,
  `categoria` VARCHAR(50) NOT NULL,
  `descricao` TEXT(150) NOT NULL,
  `valor` DECIMAL NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ecommerce_dio`.`estoque`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ecommerce_dio`.`estoque` (
  `id` INT NOT NULL,
  `local` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ecommerce_dio`.`pedido`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ecommerce_dio`.`pedido` (
  `id` INT NOT NULL,
  `status_do_pedido` VARCHAR(45) NOT NULL,
  `descricao` VARCHAR(150) NOT NULL,
  `cliente_id` INT NOT NULL,
  `frete` FLOAT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_pedido_cliente1_idx` (`cliente_id` ASC) VISIBLE,
  CONSTRAINT `fk_pedido_cliente1`
    FOREIGN KEY (`cliente_id`)
    REFERENCES `ecommerce_dio`.`cliente` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ecommerce_dio`.`fornecedor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ecommerce_dio`.`fornecedor` (
  `id` INT NOT NULL,
  `razao_social` VARCHAR(125) NOT NULL,
  `cnpj` VARCHAR(16) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ecommerce_dio`.`produto_oferecido_fornecedor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ecommerce_dio`.`produto_oferecido_fornecedor` (
  `produto_id` INT NOT NULL,
  `fornecedor_id` INT NOT NULL,
  PRIMARY KEY (`produto_id`, `fornecedor_id`),
  INDEX `fk_produto_has_fornecedor_fornecedor1_idx` (`fornecedor_id` ASC) VISIBLE,
  INDEX `fk_produto_has_fornecedor_produto_idx` (`produto_id` ASC) VISIBLE,
  CONSTRAINT `fk_produto_has_fornecedor_produto`
    FOREIGN KEY (`produto_id`)
    REFERENCES `ecommerce_dio`.`produto` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_produto_has_fornecedor_fornecedor1`
    FOREIGN KEY (`fornecedor_id`)
    REFERENCES `ecommerce_dio`.`fornecedor` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ecommerce_dio`.`produto_em_estoque`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ecommerce_dio`.`produto_em_estoque` (
  `produto_id` INT NOT NULL,
  `estoque_id` INT NOT NULL,
  `quantidade` INT NOT NULL,
  PRIMARY KEY (`produto_id`, `estoque_id`),
  INDEX `fk_produto_has_estoque_estoque1_idx` (`estoque_id` ASC) VISIBLE,
  INDEX `fk_produto_has_estoque_produto1_idx` (`produto_id` ASC) VISIBLE,
  CONSTRAINT `fk_produto_has_estoque_produto1`
    FOREIGN KEY (`produto_id`)
    REFERENCES `ecommerce_dio`.`produto` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_produto_has_estoque_estoque1`
    FOREIGN KEY (`estoque_id`)
    REFERENCES `ecommerce_dio`.`estoque` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ecommerce_dio`.`pedido_tem_produto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ecommerce_dio`.`pedido_tem_produto` (
  `produto_id` INT NOT NULL,
  `pedido_id` INT NOT NULL,
  `quantidade` INT NOT NULL,
  PRIMARY KEY (`produto_id`, `pedido_id`),
  INDEX `fk_produto_has_pedido_pedido1_idx` (`pedido_id` ASC) VISIBLE,
  INDEX `fk_produto_has_pedido_produto1_idx` (`produto_id` ASC) VISIBLE,
  CONSTRAINT `fk_produto_has_pedido_produto1`
    FOREIGN KEY (`produto_id`)
    REFERENCES `ecommerce_dio`.`produto` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_produto_has_pedido_pedido1`
    FOREIGN KEY (`pedido_id`)
    REFERENCES `ecommerce_dio`.`pedido` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ecommerce_dio`.`vendedor_terceiro`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ecommerce_dio`.`vendedor_terceiro` (
  `id` INT NOT NULL,
  `razao_social` VARCHAR(45) NOT NULL,
  `local` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ecommerce_dio`.`produtos_por_vendedor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ecommerce_dio`.`produtos_por_vendedor` (
  `vendedor_terceiro_id` INT NOT NULL,
  `produto_id` INT NOT NULL,
  `quantidade` INT NOT NULL,
  PRIMARY KEY (`vendedor_terceiro_id`, `produto_id`),
  INDEX `fk_vendedor_terceiro_has_produto_produto1_idx` (`produto_id` ASC) VISIBLE,
  INDEX `fk_vendedor_terceiro_has_produto_vendedor_terceiro1_idx` (`vendedor_terceiro_id` ASC) VISIBLE,
  CONSTRAINT `fk_vendedor_terceiro_has_produto_vendedor_terceiro1`
    FOREIGN KEY (`vendedor_terceiro_id`)
    REFERENCES `ecommerce_dio`.`vendedor_terceiro` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_vendedor_terceiro_has_produto_produto1`
    FOREIGN KEY (`produto_id`)
    REFERENCES `ecommerce_dio`.`produto` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ecommerce_dio`.`forma_de_pagamento`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ecommerce_dio`.`forma_de_pagamento` (
  `id` INT NOT NULL,
  `dados` VARCHAR(45) NULL,
  `cliente_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_forma_de_pagamento_cliente1_idx` (`cliente_id` ASC) VISIBLE,
  CONSTRAINT `fk_forma_de_pagamento_cliente1`
    FOREIGN KEY (`cliente_id`)
    REFERENCES `ecommerce_dio`.`cliente` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ecommerce_dio`.`entrega`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ecommerce_dio`.`entrega` (
  `id` INT NOT NULL,
  `status` VARCHAR(45) NOT NULL,
  `codigo_de_rastreio` VARCHAR(45) NOT NULL,
  `pedido_id` INT NOT NULL,
  PRIMARY KEY (`id`, `pedido_id`),
  INDEX `fk_entrega_pedido1_idx` (`pedido_id` ASC) VISIBLE,
  CONSTRAINT `fk_entrega_pedido1`
    FOREIGN KEY (`pedido_id`)
    REFERENCES `ecommerce_dio`.`pedido` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
